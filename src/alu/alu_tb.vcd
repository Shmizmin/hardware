$date
	Sun Sep 11 21:35:02 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 8 ! fo [7:0] $end
$var wire 8 " d [7:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % clk $end
$var reg 8 & fi [7:0] $end
$var reg 7 ' op [6:0] $end
$var reg 1 ( rst $end
$scope module alu $end
$var wire 8 ) a [7:0] $end
$var wire 8 * b [7:0] $end
$var wire 1 % clk $end
$var wire 8 + fi [7:0] $end
$var wire 7 , op [6:0] $end
$var wire 1 ( rst $end
$var reg 9 - ai [8:0] $end
$var reg 9 . bi [8:0] $end
$var reg 8 / d [7:0] $end
$var reg 8 0 flags [7:0] $end
$var reg 8 1 fo [7:0] $end
$var reg 9 2 out [8:0] $end
$var reg 8 3 tmp [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
b0 2
bx 1
b0 0
bx /
bx .
bx -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
b0 &
0%
b0 $
b0 #
bx "
bx !
$end
#10
b0 !
b0 1
b0 "
b0 /
b10 0
b0 .
b0 -
b0 3
1%
#20
0%
#30
b10 !
b10 1
1%
#40
0%
#50
b1100100 .
b1 -
1%
b1100100 $
b1100100 *
b1 #
b1 )
#60
0%
#70
1%
#80
0%
#90
1%
#100
0%
b1 '
b1 ,
#110
b1100101 2
1%
#120
0%
#130
b1100101 "
b1100101 /
b100 0
b1100101 3
1%
#140
0%
#150
b100 !
b100 1
b110011101 2
1%
b10 '
b10 ,
#160
0%
#170
b10011101 "
b10011101 /
b1 0
b10011101 3
1%
#180
0%
#190
b1 !
b1 1
1%
#200
0%
b11 '
b11 ,
#210
b0 2
1%
#220
0%
#230
b0 "
b0 /
b11 0
b0 3
1%
#240
0%
#250
b11 !
b11 1
1%
b100 '
b100 ,
#260
0%
#270
1%
#280
0%
#290
1%
#300
0%
#310
b1100101 2
1%
b1000 '
b1000 ,
#320
0%
#330
b1100101 "
b1100101 /
b101 0
b1100101 3
1%
#340
0%
#350
b101 !
b101 1
1%
#360
0%
b10000 '
b10000 ,
#370
b111111110 2
1%
#380
0%
#390
b11111110 "
b11111110 /
b1 0
b11111110 3
1%
#400
0%
#410
b1 !
b1 1
b0 2
1%
b100000 '
b100000 ,
#420
0%
#430
b0 "
b0 /
b11 0
b0 3
1%
#440
0%
#450
b11 !
b11 1
1%
#460
0%
b1000000 '
b1000000 ,
#470
1%
#480
0%
#490
1%
#500
0%
#510
1%
b1000001 '
b1000001 ,
#520
0%
#530
1%
#540
0%
#550
1%
#560
0%
