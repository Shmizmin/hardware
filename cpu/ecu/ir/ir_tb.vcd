$date
	Wed Sep  7 22:53:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ir_tb $end
$var wire 8 ! insn [7:0] $end
$var wire 8 " d3 [7:0] $end
$var wire 8 # d2 [7:0] $end
$var wire 8 $ d1 [7:0] $end
$var reg 1 % clk $end
$var reg 2 & len [1:0] $end
$var reg 32 ' raw [31:0] $end
$var reg 1 ( rst $end
$var reg 1 ) we $end
$scope module r $end
$var wire 1 % clk $end
$var wire 2 * len [1:0] $end
$var wire 32 + raw [31:0] $end
$var wire 1 ( rst $end
$var wire 1 ) we $end
$var reg 8 , d1 [7:0] $end
$var reg 8 - d2 [7:0] $end
$var reg 8 . d3 [7:0] $end
$var reg 8 / insn [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
b0 +
b0 *
0)
0(
b0 '
b0 &
0%
bx $
bx #
bx "
bx !
$end
#10
1%
#20
0%
#30
1%
#40
0%
#50
1%
1)
b10 &
b10 *
b1011110011000000110001000000010 '
b1011110011000000110001000000010 +
#60
bz "
bz .
b1100010 #
b1100010 -
b1100000 $
b1100000 ,
b1011110 !
b1011110 /
0%
#70
1%
#80
0%
#90
1%
#100
0%
0)
#110
1%
#120
0%
#130
1%
#140
0%
#150
1%
b1 &
b1 *
#160
0%
#170
1%
#180
0%
#190
1%
#200
0%
b11011111111000110100001011111110 '
b11011111111000110100001011111110 +
#210
1%
#220
0%
#230
1%
#240
0%
#250
1%
#260
bz #
bz -
b11100011 $
b11100011 ,
b11011111 !
b11011111 /
0%
1)
#270
1%
#280
0%
#290
1%
#300
0%
#310
1%
0)
#320
0%
#330
1%
#340
0%
#350
1%
#360
0%
#370
1%
#380
0%
#390
1%
#400
0%
#410
1%
1)
b0 &
b0 *
#420
bz $
bz ,
0%
#430
1%
#440
0%
#450
1%
#460
0%
0)
b10 &
b10 *
#470
1%
#480
0%
#490
1%
#500
0%
#510
1%
b11 &
b11 *
#520
0%
#530
1%
#540
0%
#550
1%
#560
0%
1(
#570
b0 "
b0 .
b0 #
b0 -
b0 $
b0 ,
b0 !
b0 /
1%
#580
0%
#590
1%
#600
0%
#610
1%
1)
b110010010010011111110100101010 '
b110010010010011111110100101010 +
0(
#620
b101010 "
b101010 .
b11111101 #
b11111101 -
b1001001 $
b1001001 ,
b110010 !
b110010 /
0%
#630
1%
#640
0%
#650
1%
#660
0%
#670
1%
#680
0%
#690
1%
#700
0%
#710
1%
